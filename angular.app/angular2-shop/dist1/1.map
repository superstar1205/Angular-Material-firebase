{"version":3,"file":"1.chunk.js","sources":["webpack:///client/app/about/index.ts","webpack:///client/app/about/about.component.ts"],"sourcesContent":["export * from './about.component';\n\n\n\n/** WEBPACK FOOTER **\n ** client/app/about/index.ts\n **/","import {Component} from '@angular/core';\n\n/*\n * We're loading this component asynchronously\n * We are using some magic with es6-promise-loader that will wrap the module with a Promise\n * see https://github.com/gdi2290/es6-promise-loader for more info\n */\n\nconsole.log('`About` component loaded asynchronously');\n\n@Component({\n  selector: 'about',\n  template: `\n    <md-card>\n      <h3>\n        About Us\n      </h3>\n    </md-card>\n  `,\n})\nexport class About {\n  constructor() {\n\n  }\n\n  ngOnInit() {\n    console.log('hello `About` component');\n    // static data that is bundled\n    //var mockData = require('assets/mock-data/mock-data.json');\n    //console.log('mockData', mockData);\n    // if you're working with mock data you can also use http.get('assets/mock-data/mock-data.json')\n    //this.asyncDataWithWebpack();\n  }\n  asyncDataWithWebpack() {\n    // you can also async load mock data with 'es6-promise-loader'\n    // you would do this if you don't want the mock-data bundled\n    // remember that 'es6-promise-loader' is a promise\n    //var asyncMockDataPromiseFactory = require('es6-promise!assets/mock-data/mock-data.json');\n    //setTimeout(() => {\n\n    //  let asyncDataPromise = asyncMockDataPromiseFactory();\n    //  asyncDataPromise.then(json => {\n    //    console.log('async mockData', json);\n    //  });\n    //});\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** client/app/about/about.component.ts\n **/"],"mappings":";;;;;;;;;AAAA;;;;;;;;;ACAA;AAEA;;;;AAIA;AAEA;AAYA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAAA;AACA;AACA;AAOA;;AAAA;AA2BA;AAAA;AA1BA;;;;;","sourceRoot":""}